{"version":3,"sources":["reportWebVitals.js","components/Blocks/Default.js","components/Columns/Default.js","components/Wrappers/Default.js","store/constants/boards.constants.js","store/constants/settings.constants.js","components/Dialog/Default.js","components/Blocks/ConfigBlock.js","store/actions/settings.actions.js","components/Blocks/DefaultColoredBlock.js","components/Blocks/InputBlock.js","components/Blocks/DailyMatchBlock.js","containers/Portal.js","store/actions/boards.actions.js","assets/images/SteelDemonLogo.png","assets/icons/cryptoblades.png","components/Sidebar/Sidebar.js","components/Updates/UpdateBoard.js","layout/MainLayout.js","routes/CommonRoutes.js","routes/utils.js","routes/index.js","theme/index.js","App.js","store/reducers/settings.reducers.js","store/reducers/boards.reducers.js","store/reducers/reducers.js","store/reducers/index.js","store/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","display","width","marginBottom","spacing","DefaultBlock","props","block","classes","draggableId","id","index","provided","Paper","ref","innerRef","draggableProps","dragHandleProps","className","content","padding","height","DefaultColumn","elevation","droppableId","column","droppableProps","blocks","map","Default","placeholder","DefaultWrapper","children","SET_BLOCKS","UPDATE_COLUMN_ORDER","UPDATE_COLUMN_BLOCKS","TOGGLEDRAWER","SETACTIVEMENU","SET_CONFIGURATIONS","SET_USER_CURRENCIES","SET_USER_MATCHES","SET_UPDATE_STATUS","DefaultDialog","open","closeCallback","title","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","textAlign","background","borderTop","textFields","formControl","minWidth","selectEmpty","marginTop","connect","state","settings","dispatch","updateConfigurations","params","type","setConfigurations","supportedCurrencies","useState","walletAddress","apiKey","localCurrency","farmingCurrency","capitalCurrency","config","setConfig","apiKeyInfoOpen","setApiKeyInfoOpen","walletInfoOpen","setWalletInfoOpen","useEffect","userConfig","Typography","variant","gutterBottom","component","align","Link","href","onClick","e","preventDefault","TextField","label","size","error","helperText","onChange","value","target","prevState","Object","keys","length","FormControl","InputLabel","shrink","Select","labelId","i","MenuItem","toUpperCase","userCurrencies","currency","style","color","rel","DefaultColoredBlock","fontWeight","fontSize","inputField","updateUserCurrencies","setUserCurrencies","currencyId","InputProps","endAdornment","InputAdornment","position","inputAdornment","updateUserMatches","setUserMatches","exchangeRate","useTheme","defaultMatch","win","loss","match","remaining","rewardsGained","dateTime","userMatches","todayMatches","confirmSave","setConfirmSave","convertedRate","setConvertedRate","getFormattedDay","moment","format","console","log","remainingMatches","setRemainingMatches","matchReward","setMatchReward","parseInt","Grid","container","item","xs","readOnly","IconButton","parseFloat","numeral","AddCircle","Container","justifyContent","alignItems","Button","disableElevation","SaveRounded","DialogActions","Date","now","disableFocusRipple","boards","updateBlocks","setBlocks","updateColumnBlocks","currencies","userWalletTransactions","userBinanceBalance","userData","setUserData","isLoading","setIsLoading","CURRENCIES_DATA","BINANCE_WALLET_DATA","BINANCE_WALLET_BALANCE","req_currency_data","axios","get","req_wallet_data","req_balance_data","req_supported_currencies","all","spread","respCurrencyData","respWalletData","respBalanceData","respSupportedCurrencies","data","catch","errors","BLOCK_OBJECT","totalTransactions","_","filter","result","o","to","reduce","total","obj","gasUsed","currencyExchangeValue","current_price","userBNBBalance","BNBCurrentPRice","userBNBBalanceExchange","currencyEarningExchange","totalTransactionsInExchange","ROIGasVSCapitalAndSumTxns","ROICalcGasFee","TotalInitialInvestmentPeso","blockData","DailyMatchBlock","borderColor","backgroundColor","symbol","col","columns","listAllBlocks","boardBucket","blockIds","itemcol","requestSetBlock","requestUpdateColumnBlocks","onDragEnd","destination","source","start","finish","startBlockIds","Array","from","pluckedStart","splice","newStartColumn","finishBlockIds","newFinishColumn","updatedColumns","newBlockIds","plucked","newColumn","columnOrder","columnId","blockId","md","lg","drawerWidth","logo","sidebarItemIcon","palette","secondary","main","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","boxShadow","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","flexGrow","appName","activeMenu","primary","common","white","ImageIcon","src","maxWidth","alt","MENU_ITEMS","text","slug","url","icon","CryptoBladesLogo","menuName","handleToggleDrawer","handleActiveMenu","iconsTransition","opacity","CssBaseline","AppBar","clsx","Drawer","paper","aria-label","edge","disableRipple","Logo","borderWidth","borderStyle","direction","MenuOpenRounded","Divider","List","ListItem","button","ListItemIcon","ListItemText","UpdateBoard","requestUpdateStatus","handleClose","updateStatus","updateNotice","appVersion","updateSettings","version","updateContent","warning","footer","debug","undefined","Alert","severity","paddingLeft","idx","dangerouslySetInnerHTML","__html","routes","path","Portal","layout","bindActionCreators","updateDrawerState","toggleDrawer","updateActiveMenu","setActiveMenu","setUpdateStatus","withStyles","overflowY","minHeight","contentShift","isDrawerOpen","setOpen","menu","classNames","exact","createRoutes","route","key","Component","Layout","rest","render","matchProps","Routes","CommonRoutes","createTheme","black","lightblue","lightbrown","lightgrey","lightred","typography","fontFamily","htmlFontSize","subheading","DEFAULT_THEME","INITIAL_STATE","reducers","action","persistConfig","storage","blacklist","whitelist","rootReducer","combineReducers","persistReducer","middleware","thunk","logger","store","createStore","applyMiddleware","persistor","persistStore","history","createBrowserHistory","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.07db575d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Fragment } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    display: 'flex',\t\t\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\t\t\n\t},\n}))\n\nconst DefaultBlock = props => {\n\tconst { block } = props\n\tconst classes = useStyles()\n  return (\n\t\t<Fragment>\n\t\t\t{ block &&\n\t\t\t\t<Draggable\n\t\t\t\t\tdraggableId={block.id}\n\t\t\t\t\tindex={props.index}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t(provided)=>{\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.root}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{block.content}\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t</Draggable>\n\t\t\t}\n\t\t</Fragment>\n  );\n};\n\nexport default DefaultBlock\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DefaultBlock from \"../Blocks/Default\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    display: 'flex',\n\t\tpadding: theme.spacing(2,2,0,2),\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\t'& > div' : {\n\t\t\twidth: '100%'\n\t\t},\n\t},\n}))\n\n\nconst DefaultColumn = props => {\n\tconst classes = useStyles();\n  return (\n\t\t<Paper {...props} className={classes.root} elevation={0}>\n\t\t\t<Droppable droppableId={props.column.id}>\n\t\t\t\t{\n\t\t\t\t\t(provided)=>(\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.blocks && props.blocks.map((block, index) => <DefaultBlock key={(block && block.id) || index} block={block} index={index} />)}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Droppable>  \n    </Paper>\n  );\n};\n\nexport default DefaultColumn\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    display: 'flex',\n\t\tpadding: theme.spacing(1)\n\t},\n}))\n\nconst DefaultWrapper = props => {\n\tconst classes = useStyles();\n\tconst { children } = props\n\t\n  return (\n    <div className={classes.root}>\t\t\t\n\t\t\t{children}\n    </div>\n  );\n};\n\nexport default DefaultWrapper\n","export const SET_BLOCKS = \"boards/SET_BLOCKS\";\nexport const UPDATE_COLUMN_ORDER = \"boards/UPDATE_COLUMN_ORDER\";\nexport const UPDATE_COLUMN_BLOCKS = \"boards/UPDATE_COLUMN_BLOCKS\";","export const TOGGLEDRAWER = \"settings/TOGGLEDRAWER\";\nexport const SETACTIVEMENU = \"settings/SETACTIVEMENU\";\nexport const SET_CONFIGURATIONS = \"settings/SET_CONFIGURATIONS\";\nexport const SET_USER_CURRENCIES = \"settings/SET_USER_CURRENCIES\";\nexport const SET_USER_MATCHES = \"settings/SET_USER_MATCHES\";\nexport const SET_UPDATE_STATUS = \"settings/SET_UPDATE_STATUS\";","import { Dialog, DialogContentText, DialogTitle, DialogContent } from '@material-ui/core';\nimport React from 'react';\n\nconst DefaultDialog = (props) => {\n  const { open, closeCallback, content, children, title } = props\n\n  const handleClose = () => {\n    closeCallback(!open)\n  };\n\n  return (\n    <div>\t\t\t\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {content}\n\t\t\t\t\t\t{children}\n          </DialogContentText>\n        </DialogContent>        \n      </Dialog>\n    </div>\n  );\n}\n\nexport default DefaultDialog\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, InputLabel, Link, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\nimport { setConfigurations } from \"../../store/actions/settings.actions\";\nimport DefaultDialog from \"../Dialog/Default\";\nconst useStyles = makeStyles((theme) => ({\n\troot: {    \t\n\t\twidth: '100%',\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\tbackground: '#F2F2F2',\n\t\tborderTop: 'solid 8px #999999'\n\t},\n\ttextFields: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tformControl: {    \n    minWidth: 120,\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2)\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\n\nconst ConfigBlock = props => {\n\tconst {\n\t\tsettings,\n\t\tupdateConfigurations,\n\t\tsupportedCurrencies\n\t} = props\n\tconst classes = useStyles();\n\n\tconst defaultConfig = {\n\t\twalletAddress: null,\n\t\tapiKey: null,\n\t\tlocalCurrency: 'PHP',\n\t\tfarmingCurrency: 'SKILL',\n\t\tcapitalCurrency: 'PHP'\n\t}\n\n\tconst [config, setConfig] = useState(defaultConfig)\n\tconst [apiKeyInfoOpen, setApiKeyInfoOpen] = useState(false)\n\tconst [walletInfoOpen, setWalletInfoOpen] = useState(false)\n\tuseEffect(()=>{\n\t\tif(settings && !settings.userConfig) {\t\t\t\n\t\t\tupdateConfigurations(config)\n\t\t}else{\n\t\t\tsetConfig(settings.userConfig)\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[])\n\n\tuseEffect(() => {\t\t\n\t\t\n\t\tupdateConfigurations(config)\n\t\t\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [config, updateConfigurations ])\n\n  return (\n\t\t<div className={classes.root}>\n\t\t\t<Typography variant={'button'} display={'block'} gutterBottom>Configuration</Typography>\n\t\t\t<Typography variant={'caption'} component={'div'} align={'left'} gutterBottom>\n\t\t\t\tWhy the app needs your wallet address? <Link href={'#'} onClick={(e)=> {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tsetWalletInfoOpen(true)\n\t\t\t\t}}>Expand Details</Link>\n\t\t\t</Typography>\n\t\t\t<TextField \n\t\t\t\tlabel={'Wallet Address'}\n\t\t\t\tvariant={'outlined'}\n\t\t\t\tplaceholder={'0xaBcd123...'}\n\t\t\t\tsize={'small'}\n\t\t\t\tclassName={classes.textFields}\n\t\t\t\terror={!config.walletAddress}\n\t\t\t\thelperText={!config.walletAddress ? 'Wallet Address required.' : ''}\n\t\t\t\tonChange={(e)=> {\n\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\tsetConfig((prevState) => { return {...prevState, walletAddress: value}})\n\t\t\t\t}}\n\t\t\t\tvalue={config && config.walletAddress ? config.walletAddress : ''}\n\t\t\t/>\n\t\t\t<Typography variant={'caption'} component={'div'} align={'left'} gutterBottom>What is API Key and why do the app need it? <Link href={'#'} onClick={(e)=> {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetApiKeyInfoOpen(true)\n\t\t\t}}>Expand Details</Link>\n\t\t\t</Typography>\n\t\t\t<TextField \n\t\t\t\tlabel={'API Key'}\n\t\t\t\tvariant={'outlined'}\t\t\t\t\n\t\t\t\tsize={'small'}\n\t\t\t\tclassName={classes.textFields}\n\t\t\t\terror={!config.apiKey}\n\t\t\t\thelperText={!config.apiKey ? 'API Key is required.' : ''}\n\t\t\t\tonChange={(e)=> {\n\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\tsetConfig((prevState) => { return {...prevState, apiKey: value}})\n\t\t\t\t}}\n\t\t\t\tvalue={config && config.apiKey ? config.apiKey : ''}\n\t\t\t/>\n\t\t\t{supportedCurrencies && Object.keys(supportedCurrencies).length > 0 &&\n\t\t\t\t<FormControl className={classes.formControl} variant={'outlined'} size={'small'}>\n\t\t\t\t\t<InputLabel shrink id=\"capital-currency-selector-label\">Local Currency</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"local-currency-selector-label\"\n\t\t\t\t\t\tid=\"local-currency-selector\"\n\t\t\t\t\t\tvalue={settings && settings.userConfig && settings.userConfig.localCurrency || 'USD'}\n\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, localCurrency: value}})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={classes.selectEmpty}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.keys(supportedCurrencies).map((i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem value={supportedCurrencies[i].toUpperCase()} key={i}>{supportedCurrencies[i].toUpperCase()}</MenuItem>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t</Select>        \n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t\t{settings.userCurrencies && Object.keys(settings.userCurrencies).length > 0 && \n\t\t\t<Fragment>\n\t\t\t\t<FormControl className={classes.formControl} variant={'outlined'} size={'small'}>\n\t\t\t\t\t\t\t\t<InputLabel shrink id=\"capital-currency-selector-label\">Currency Used for Capital</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId=\"capital-currency-selector-label\"\n\t\t\t\t\t\t\t\t\tid=\"capital-currency-selector\"\n\t\t\t\t\t\t\t\t\tvalue={settings.userConfig.capitalCurrency || ''}\n\t\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, capitalCurrency: value}})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.selectEmpty}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsettings.userCurrencies && Object.keys(settings.userCurrencies).map((currency) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem value={currency} key={currency}>{currency}</MenuItem>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t</Select>        \n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl className={classes.formControl} variant={'outlined'} size={'small'}>\n\t\t\t\t\t<InputLabel shrink id=\"farming-currency-selector-label\">Currency You are Farming</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"farming-currency-selector-label\"\n\t\t\t\t\t\tid=\"farming-currency-selector\"\n\t\t\t\t\t\tvalue={settings.userConfig.farmingCurrency || ''}\n\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, farmingCurrency: value}})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={classes.selectEmpty}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsettings.userCurrencies && Object.keys(settings.userCurrencies).map((currency) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem value={currency} key={currency}>{currency}</MenuItem>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>        \n\t\t\t\t</FormControl>\n\t\t\t</Fragment>\n\t\t\t}\n\t\t\t<DefaultDialog open={apiKeyInfoOpen} closeCallback={() => setApiKeyInfoOpen(false) }\n\t\t\t\ttitle={'What is API Key and why do the app need it?'}\n\t\t\t>\n\t\t\t\t<ol style={{padding: '0 20px 20px 10px'}}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tWe are using Binance Smart Chain Developer API to fetch community data from their server using your wallet address. \n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tYour wallet information and data we use on this app is also publicly accessible from the <Link href={'https://bscscan.com/'} color={'primary'} target=\"_blank\" rel=\"noopener\">BSCChain Website</Link>. We are only accessing it through API so we can have a more customized view of the data we need.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tThis API Key has nothing to do with anything private on your wallet. If you still don't trust the use of this app, please feel free to leave. \n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tTo create your personal API Key, please create an account on <Link href={'https://bscscan.com/register'} target={'_blank'} rel=\"noopener\">BSCScan here</Link> and create an API Key here <Link href={'https://bscscan.com/myapikey'} color={'primary'} target=\"_blank\" rel=\"noopener\">ClientPortal-&gt;MyApiKey</Link> area of BSCScan. \n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom style={{color:'red'}}>\n\t\t\t\t\t\t\t<strong>Important Note:</strong> This key has nothing to do with your wallet security keys. Never use your Wallet security key on this field as this field never hides the API Key field since this is a public data viewer only.  <br/><br/>\n\t\t\t\t\t\t\t<strong>This app will neither require nor ask your seed phrase or any security details of your wallet. Please keep your security details private. </strong>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</DefaultDialog>\n\t\t\t<DefaultDialog open={walletInfoOpen} closeCallback={() => setWalletInfoOpen(false) }\n\t\t\t\ttitle={'Why the app needs your wallet address?'}\n\t\t\t>\n\t\t\t\t<ol style={{padding: '0 20px 20px 10px'}}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tWe are using Binance Smart Chain Developer API to fetch community data from their server using your wallet address. \n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tYour wallet information and data we use on this app is also publicly accessible from the <Link href={'https://bscscan.com/'} color={'primary'} target=\"_blank\" rel=\"noopener\">BSCChain Website</Link>. We are only accessing it through API so we can have a more customized view of the data we need.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom>\n\t\t\t\t\t\t\tIf you still don't trust the use of this app, please feel free to leave. \n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography variant={'body1'} gutterBottom style={{color:'red'}}>\n\t\t\t\t\t\t\t<strong>Important Note:</strong> This field has nothing to do with your wallet security keys. Never use your Wallet security key on this field as this field never hides the value since this is a public data viewer only.  <br/><br/>\n\t\t\t\t\t\t\t<strong>This app will neither require nor ask your seed phrase or any security details of your wallet. Please keep your security details private. </strong>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</DefaultDialog>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = state => {\n  return {\n\t\tsettings: state.settings \n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\t\tupdateConfigurations: (params) => dispatch(setConfigurations(params))\n\t}\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfigBlock);\n","import {\n  TOGGLEDRAWER,\n\tSETACTIVEMENU,\n\tSET_CONFIGURATIONS,\n\tSET_USER_CURRENCIES,\n\tSET_USER_MATCHES,\n\tSET_UPDATE_STATUS\n} from \"../constants/settings.constants\";\n\nexport const toggleDrawer = (params) => {\n  return {\n    type: TOGGLEDRAWER,\n    params\n  };\n}\n\nexport const setActiveMenu = (params) => {\n  return {\n    type: SETACTIVEMENU,\n    params\n  };\n}\n\nexport const setConfigurations = (params) => {\n  return {\n    type: SET_CONFIGURATIONS,\n    params\n  };\n}\n\nexport const setUserCurrencies = (params) => {\n  return {\n    type: SET_USER_CURRENCIES,\n    params\n  };\n}\n\nexport const setUserMatches = (params) => {\n  return {\n    type: SET_USER_MATCHES,\n    params\n  };\n}\nexport const setUpdateStatus = (params) => {\n  return {\n    type: SET_UPDATE_STATUS,\n    params\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n\troot: {    \t\n\t\twidth: '100%',\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\tbackground: '#E2E3E3',\n\t\tborderTop: 'solid 8px #999999'\n\t},\n}))\n\n\nconst DefaultColoredBlock = props => {\n\tconst {\n\t\ttitle='Block Title',\n\t\tvalue,\n\t\tcolor,\n\t\tstyle={}\n\t} = props\n\n\tconst classes = useStyles();\n  return (\n\t\t<div style={ style } className={classes.root}>\n\t\t\t<Typography variant={'button'} display={'block'} gutterBottom>{title}</Typography>\n\t\t\t<Typography variant={'h3'} display={'block'} style={{color: color || '#999999', fontWeight: 500}} gutterBottom>{value || 0}</Typography>\n    </div>\n  );\n};\n\nexport default DefaultColoredBlock\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { setUserCurrencies } from \"../../store/actions/settings.actions\";\nconst useStyles = makeStyles((theme) => ({\n\troot: {    \t\n\t\twidth: '100%',\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\tbackground: '#F2F2F2',\n\t\tborderTop: 'solid 8px #999999'\n\t},\n\ttextFields: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\t'& p': {\n\t\t\tfontSize: '3rem'\n\t\t} \n\t},\n\tinputField: {\t\t\n\t\tfontSize: '3rem',\n\t\tfontWeight: 500,\n\t\t'& input': {\n\t\t\ttextAlign: 'center',\t\t\t\n\t\t}\n\t},\n}))\n\n\nconst InputBlock = props => {\n\tconst {\n\t\tsettings,\n\t\ttitle,\n\t\tupdateUserCurrencies,\n\t\tcurrency,\n\t\tcurrencyId,\n\t\tstyle,\n\t\tcolor\n\t} = props\n\tconst classes = useStyles();\n\n\tconst defaultConfig = {}\n\n\tconst [config, setConfig] = useState(defaultConfig)\n\tuseEffect(()=>{\n\t\tif(settings && !settings.userCurrencies) {\n\t\t\tif(config.length === 0 && config[currency]) {\n\t\t\t\tsetConfig((prevState) => {return {...prevState, [currency]: {...prevState[currency], value: '', id: currencyId }}})\t\t\t\t\n\t\t\t}else{\n\t\t\t\tsetConfig((prevState) => {return {...prevState, [currency]: {...prevState[currency], value: '', id: currencyId}}})\t\t\t\t\n\t\t\t}\n\t\t\tupdateUserCurrencies(config)\t\t\t\n\t\t}else{\n\t\t\tsetConfig(settings.userCurrencies)\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[])\n\n\tuseEffect(() => {\t\t\n\t\t\n\t\tupdateUserCurrencies(config)\t\t\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [config, updateUserCurrencies ])\n\n\n\n  return (\n\t\t<div style={ style } className={classes.root}>\n\t\t\t<Typography variant={'button'} display={'block'} gutterBottom>{title}</Typography>\n\t\t\t<TextField \t\t\t\t\n\t\t\t\t// variant={'outlined'}\t\t\t\t\n\t\t\t\tsize={'small'}\n\t\t\t\tclassName={classes.textFields}\n\t\t\t\tonChange={(e)=> {\n\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\tsetConfig((prevState) => { return {...prevState, [currency]: { ...prevState[currency], value: value, id: currencyId }}})\n\t\t\t\t}}\n\t\t\t\tvalue={config && config[currency] && config[currency].value ? config[currency].value : ''}\t\t\t\t\n\t\t\t\t//placeholder={0}\t\t\t\t\n\t\t\t\tInputProps={{\t\t\t\t\n\t\t\t\t\tclassName: classes.inputField,\t\n\t\t\t\t\tstyle:{color: color},\n\t\t\t\t\ttype:'number',\n\t\t\t\t\tendAdornment: <InputAdornment position=\"end\" className={classes.inputAdornment}>{`${currency}`}</InputAdornment>\n\t\t\t\t}}\t\t\t\t\n\t\t\t/>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = state => {\n  return {\n\t\tsettings: state.settings \n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\t\tupdateUserCurrencies: (params) => dispatch(setUserCurrencies(params))\n\t}\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InputBlock);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { setUserMatches } from \"../../store/actions/settings.actions\";\nimport { AddCircle, SaveRounded } from \"@material-ui/icons\";\nimport numeral from \"numeral\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {    \t\n\t\twidth: '100%',\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\tbackground: '#F2F2F2',\n\t\tborderTop: 'solid 8px #999999'\n\t},\n\ttextFields: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\t'& p': {\n\t\t\tfontSize: '1.2rem'\n\t\t} \n\t},\n\tinputField: {\t\t\n\t\tfontSize: '1.5rem',\n\t\tfontWeight: 500,\n\t\t'& input': {\n\t\t\ttextAlign: 'center',\t\t\t\n\t\t}\n\t},\n}))\n\n\nconst MatchCounterBlock = props => {\n\tconst {\n\t\tsettings,\n\t\ttitle,\t\t\n\t\tstyle,\n\t\tcolor,\n\t\texchangeRate,\n\t\tupdateUserMatches\n\t} = props\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst defaultConfig = {\n\t\tuserMatches: {\n\n\t\t},\n\t\ttodayMatches: {\n\n\t\t}\n\t}\n\n\tconst defaultMatch = {\n\t\twin: 0, \n\t\tloss: 0, \n\t\tmatch:28,\n\t\tremaining:0,\n\t\trewardsGained:0,\n\t\tdateTime: null,\t\t\n\t}\n\n\tconst [config, setConfig] = useState(defaultConfig)\n\tconst [confirmSave, setConfirmSave] = useState(false)\n\tconst [convertedRate, setConvertedRate] = useState(0)\n\tconst getFormattedDay = moment().format(\"MMM DD YYYY\") ;\n\t\n\tuseEffect(()=>{\n\t\t\t\t\n\t\tif(settings && settings.todayMatches && Object.keys(settings.todayMatches).length === 0)\t\t{\n\t\t\tsetConfig((prevState) => {return {...prevState, todayMatches: defaultMatch }})\t\n\t\t}else{\n\t\t\tsetConfig((prevState) => {return {...prevState, todayMatches: settings.todayMatches }})\t\n\t\t}\n\n\t\tconsole.log(exchangeRate, 'Rate')\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[])\n\n\tuseEffect(() => {\n\t\tif(settings && settings.todayMatches && exchangeRate) {\n\t\t\tsetConvertedRate(exchangeRate * ((settings.todayMatches && settings.todayMatches.rewardsGained) || 0))\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [exchangeRate])\n\n\tconst [remainingMatches, setRemainingMatches] = useState(0)\n\tconst [matchReward, setMatchReward] = useState(0)\n\n\tuseEffect(() => {\n\t\t\n\t\tif(config && config.todayMatches && Object.keys(config.todayMatches).length > 0) {\n\t\t\t const params = {\n\t\t\t\t target: 'todaysMatches',\n\t\t\t\t todayMatches: config.todayMatches\n\t\t\t }\n\n\t\t\t updateUserMatches(params)\n\n\t\t\t setRemainingMatches(parseInt((config.todayMatches.match || 0) - ((config.todayMatches.win || 0) + (config.todayMatches.loss || 0))))\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [config])\n\n\tuseEffect(()=>{\n\t\tsetConfig((prevState) => {return {...prevState, todayMatches: {...prevState.todayMatches, remaining: remainingMatches} }})\t\n\t},[remainingMatches])\n\n\tconst handleSaveTodayMatches = () => {\n\t\tconst params = {\n\t\t\ttarget: 'userMatches',\n\t\t\tuserMatches: {\n\t\t\t\t[getFormattedDay]: {...config.todayMatches, dateTime: Date.now() }\n\t\t\t}\n\t\t}\n\n\t\tupdateUserMatches(params)\n\t\tsetConfirmSave(!confirmSave)\n\t}\n\n\n\n  return (\n\t\t<div style={ style } className={classes.root}>\n\t\t\t<Typography variant={'button'} display={'block'} gutterBottom>{title}</Typography>\n\t\t\t{ config.todayMatches && Object.keys(config.todayMatches).length > 0 && settings && settings.todayMatches && Object.keys(settings.todayMatches).length > 0 &&\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<TextField \t\t\t\t\n\t\t\t\t\t\t\t\tvariant={'outlined'}\t\t\t\t\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t\tclassName={classes.textFields}\n\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\n\t\t\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, todayMatches: { ...prevState.todayMatches, win: value }}})\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={config && config.todayMatches && config.todayMatches.win ? config.todayMatches.win : '' }\t\t\t\t\n\t\t\t\t\t\t\t\tplaceholder={'Wins'}\t\n\t\t\t\t\t\t\t\tInputProps={{\t\t\t\t\n\t\t\t\t\t\t\t\t\tclassName: classes.inputField,\t\n\t\t\t\t\t\t\t\t\tstyle:{color: color},\n\t\t\t\t\t\t\t\t\ttype:'number',\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}}\t\t\t\t\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<TextField \t\t\t\t\n\t\t\t\t\t\t\tvariant={'outlined'}\t\t\t\t\n\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\tclassName={classes.textFields}\n\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\n\t\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, todayMatches: { ...prevState.todayMatches, loss: value }}})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={config && config.todayMatches && config.todayMatches.loss ? config.todayMatches.loss : '' }\t\n\t\t\t\t\t\t\tstyle={{marginBottom:0}}\n\t\t\t\t\t\t\tplaceholder={'Losses'}\t\t\t\t\n\t\t\t\t\t\t\tInputProps={{\t\t\t\t\n\t\t\t\t\t\t\t\tclassName: classes.inputField,\t\n\t\t\t\t\t\t\t\tstyle:{color: color},\n\t\t\t\t\t\t\t\ttype:'number',\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}}\t\t\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<TextField \t\t\t\t\n\t\t\t\t\t\t\t\tvariant={'outlined'}\t\t\t\t\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t\tclassName={classes.textFields}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvalue={remainingMatches > 0 ? remainingMatches : 0}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlabel={'Remaining Matches'}\n\t\t\t\t\t\t\t\tInputProps={{\t\t\t\t\n\t\t\t\t\t\t\t\t\tclassName: classes.inputField,\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\treadOnly\t\t\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField \t\t\t\t\n\t\t\t\t\t\t\t\tvariant={'outlined'}\t\t\t\t\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t\tclassName={classes.textFields}\n\t\t\t\t\t\t\t\tlabel={'Win Reward'}\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\tconst value = e.target.value;\n\t\t\t\t\t\t\t\t\tsetMatchReward(value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={ matchReward }\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tInputProps={{\t\t\t\t\n\t\t\t\t\t\t\t\t\tclassName: classes.inputField,\t\n\t\t\t\t\t\t\t\t\tstyle:{color: color},\n\t\t\t\t\t\t\t\t\t// type:'number',\n\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\" className={classes.inputAdornment}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t><IconButton\n\t\t\t\t\t\t\t\t\t\tonClick={()=> {\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif(matchReward > 0){\n\t\t\t\t\t\t\t\t\t\t\t\tsetConfig((prevState) => { return {...prevState, todayMatches: { ...prevState.todayMatches, rewardsGained: parseFloat(numeral(settings.todayMatches.rewardsGained) + (numeral(matchReward) || 0)) }}})\n\t\t\t\t\t\t\t\t\t\t\t\tsetMatchReward(0)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t><AddCircle/></IconButton></InputAdornment>,\n\t\t\t\t\t\t\t\t}}\t\t\t\t\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\t<Container style={{display: 'flex', justifyContent: 'space-between', padding: 0, alignItems:'center'}}>\n\t\t\t\t<Button variant={'contained'} disableElevation onClick={()=>{\n\t\t\t\t\tsetConfig((prevState) => {return {...prevState, todayMatches: defaultMatch }})\t\n\t\t\t\t}}>Reset</Button>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant={'caption'}>{settings && settings.userConfig && settings.userConfig.farmingCurrency + ' '}Gained Today</Typography>\n\t\t\t\t\t<Typography variant={'h4'}>{numeral((config.todayMatches && config.todayMatches.rewardsGained) || 0).format(\"0,0.0000\")}</Typography>\n\t\t\t\t\t{settings && settings.userConfig && <Typography variant={'caption'} component={'span'}>&#8776; {settings.userConfig.localCurrency} {numeral(convertedRate || 0).format(\"0,0.00\")} <span style={{color: 'transparent'}}>l</span></Typography>}\n\t\t\t\t</div>\n\t\t\t\t<Button variant={'contained'} color={'primary'} disableElevation onClick={()=> setConfirmSave(!confirmSave)}><SaveRounded/></Button>\n\t\t\t</Container>\n\t\t\t\n\t\t\t<Dialog\n        open={confirmSave}\n        onClose={()=> setConfirmSave(!confirmSave)}\n        aria-labelledby=\"confirm-save\"\n        aria-describedby=\"confirm-save-match\"\n      >\n        <DialogTitle id=\"confirm-save\">{\"Yey! You are done for the day!\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"confirm-save-match\">\n            {\"This will save your today's match and you can view it later in your match history (Coming Soon Feature). You can still edit and save multiple times today. Past records will no longer be editable to keep the integrity of the matches. \"}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions style={{display:'flex', justifyContent: 'space-between', padding: theme.spacing(2)}} >\n          <Button onClick={()=> setConfirmSave(!confirmSave)} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleSaveTodayMatches} variant={'contained'} color=\"primary\" disableElevation disableFocusRipple>\n\t\t\t\t\t\t<SaveRounded/>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = state => {\n  return {\n\t\tsettings: state.settings \n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\t\tupdateUserMatches: params => dispatch(setUserMatches(params))\n\t}\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MatchCounterBlock);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport DefaultColumn from \"../components/Columns/Default\";\nimport DefaultWrapper from \"../components/Wrappers/Default\";\nimport { Grid } from \"@material-ui/core\";\nimport { setBlocks, updateColumnBlocks } from \"../store/actions/boards.actions\";\nimport ConfigBlock from \"../components/Blocks/ConfigBlock\";\nimport DefaultColoredBlock from \"../components/Blocks/DefaultColoredBlock\";\nimport InputBlock from \"../components/Blocks/InputBlock\";\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport _ from 'lodash';\nimport DailyMatchBlock from \"../components/Blocks/DailyMatchBlock\";\n//import MatchHistory from \"../components/Blocks/MatchHistory\";\n\n\nconst Portal = props => {\n\tconst { \n\t\tboards,\n\t\tupdateBlocks,\n\t\tuserConfig,\n\t\tupdateColumnBlocks,\n\t\tuserCurrencies,\n\t\t// userMatches\n\t } = props\n\n\t const DEFAULT_USERDATA = {\n\t\t\tcurrencies: {},\n\t\t\tuserWalletTransactions: {},\n\t\t\tuserBinanceBalance: {},\n\t\t\tsupportedCurrencies: []\n\n\t\t}\n\n\t \tconst [userData, setUserData] = useState(DEFAULT_USERDATA)\n\t\tconst [isLoading, setIsLoading] = useState(false)\n\n\t\tuseEffect(() => {\n\t\t\tif(!isLoading && userConfig && userConfig.walletAddress && userConfig.apiKey && userConfig.farmingCurrency && userConfig.localCurrency && userCurrencies && Object.keys(userCurrencies).length > 0) {\n\t\t\t\tlet selectedCurrency = userConfig.localCurrency || 'PHP'\n\t\t\t\tlet CURRENCIES_DATA = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency='+ selectedCurrency +'&ids=binancecoin,' + (userCurrencies[userConfig.farmingCurrency] && userCurrencies[userConfig.farmingCurrency].id) + ''\t\t\t\t\n\t\t\t\tlet BINANCE_WALLET_DATA = 'https://api.bscscan.com/api?module=account&action=txlist&address='+ userConfig.walletAddress +'&startblock=1&endblock=99999999&sort=desc&apikey=' + userConfig.apiKey + ''\n\t\t\t\tlet BINANCE_WALLET_BALANCE = 'https://api.bscscan.com/api?module=account&action=balance&address='+ userConfig.walletAddress +'&tag=latest&apikey=' + userConfig.apiKey + ''\n\t\t\t\tlet SUPPORTED_CURRENCIES = 'https://api.coingecko.com/api/v3/simple/supported_vs_currencies'\n\t\t\t\t\n\t\t\t\tconst req_currency_data = axios.get(CURRENCIES_DATA)\n\t\t\t\tconst req_wallet_data = axios.get(BINANCE_WALLET_DATA)\n\t\t\t\tconst req_balance_data = axios.get(BINANCE_WALLET_BALANCE)\n\t\t\t\tconst req_supported_currencies = axios.get(SUPPORTED_CURRENCIES)\n\t\t\t\tsetIsLoading(true)\n\t\t\t\taxios\n\t\t\t\t\t.all([req_currency_data, req_wallet_data, req_balance_data, req_supported_currencies])\n\t\t\t\t\t.then(\n\t\t\t\t\t\taxios.spread((...responses) => {\n\t\t\t\t\t\t\tconst respCurrencyData = responses[0];\n\t\t\t\t\t\t\tconst respWalletData = responses[1];\n\t\t\t\t\t\t\tconst respBalanceData = responses[2];\n\t\t\t\t\t\t\tconst respSupportedCurrencies = responses[3]\n\n\t\t\t\t\t\t\t// use/access the results\n\t\t\t\t\t\t\tsetUserData((prevState) => {return {\n\t\t\t\t\t\t\t\tcurrencies: {\n\t\t\t\t\t\t\t\t\t...respCurrencyData.data\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tuserWalletTransactions: {\n\t\t\t\t\t\t\t\t\t...respWalletData.data\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tuserBinanceBalance: {\n\t\t\t\t\t\t\t\t\t...respBalanceData.data\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsupportedCurrencies: {\n\t\t\t\t\t\t\t\t\t...respSupportedCurrencies.data\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}})\n\t\t\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.catch(errors => {\n\t\t\t\t\t\t// react on errors.\n\t\t\t\t\t\tconsole.error(errors);\n\t\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t}, [userConfig, userCurrencies])\n\n\t\t\tlet BLOCK_OBJECT = {}\n\t\t\tconst capitalCurrency = userConfig && userCurrencies && userCurrencies[userConfig.capitalCurrency] ? userCurrencies[userConfig.capitalCurrency] : 'PHP'\n\n\t\t\n\t\t\tconst totalTransactionsList = _.filter(userData.userWalletTransactions && userData.userWalletTransactions.result, function(o) { return o.to === '0x39bea96e13453ed52a734b6aceed4c41f57b2271'; });\n\t\t\tconst totalTransactions = (5000000000 * (totalTransactionsList.reduce((total, obj) => (parseInt(obj.gasUsed)) + total,0)))/1000000000000000000\n\n\t\t\tconst currencyExchangeValue = userData.currencies[1] && userData.currencies[1].current_price\n\t\t\tconst userBNBBalance = userData.userBinanceBalance.result/1000000000000000000\n\t\t\tconst BNBCurrentPRice = userData.currencies[0] && userData.currencies[0].current_price\n\t\t\tconst userBNBBalanceExchange = (userData.currencies[0] && userData.currencies[0].current_price) * userBNBBalance\n\t\t\tconst currencyEarningExchange = (userConfig && userCurrencies[userConfig.farmingCurrency] && userCurrencies[userConfig.farmingCurrency].value) * currencyExchangeValue\n\t\t\tconst totalTransactionsInExchange = BNBCurrentPRice * totalTransactions\n\t\t\tconst ROIGasVSCapitalAndSumTxns = currencyEarningExchange - (capitalCurrency && parseInt(capitalCurrency.value) + totalTransactionsInExchange)\n\t\t\tconst ROICalcGasFee = currencyEarningExchange - totalTransactionsInExchange\n\t\t\tconst TotalInitialInvestmentPeso = (parseInt(capitalCurrency.value)) + totalTransactionsInExchange\n\n\n\n\t\t\tconst blockData = {\n\t\t\t\tcurrencyExchangeValue: numeral(currencyExchangeValue || 0).format(\"0,0.00\"),\n\t\t\t\tuserBNBBalance: numeral(userBNBBalance || 0).format(\"0,0.0000\"),\n\t\t\t\tuserBNBBalanceExchange: numeral(userBNBBalanceExchange || 0).format(\"0,0.00\"),\n\t\t\t\tcurrencyEarningExchange: numeral(currencyEarningExchange || 0).format(\"0,0.00\"),\n\t\t\t\ttotalTransactions: numeral(totalTransactions || 0).format('0,0.000'),\n\t\t\t\ttotalTransactionsInExchange: numeral(totalTransactionsInExchange || 0).format('0,0.00'),\n\t\t\t\tROIGasVSCapitalAndSumTxns: numeral(ROIGasVSCapitalAndSumTxns || 0).format(\"0,0.00\"),\n\t\t\t\tROICalcGasFee: numeral(ROICalcGasFee || 0).format('0,0.00'),\n\t\t\t\tTotalInitialInvestmentPeso: numeral(TotalInitialInvestmentPeso || 0).format(\"0,0.00\")\n\t\t\t}\n\n\t\t\t// console.log(userConfig, 'USER CONFIG')\n\t\t\tconst localCurrency = userConfig && userConfig.localCurrency || 'PHP'\n\t\t\tBLOCK_OBJECT = {\n\t\t\t\tblocks: {\n\t\t\t\t\t'DailyMatches' : {id: 'DailyMatches', content: <DailyMatchBlock title={'Daily Matches'} exchangeRate={currencyExchangeValue || 0} color={'#480032'} style={{borderColor: '#FF449F', backgroundColor: '#DFEEEA'}}/>},\t\t\t\t\t\n\t\t\t\t\t//?Under development 'MatchHistory' : {id: 'MatchHistory', content: <MatchHistory title={'Match History'} dataSet={userMatches} color={'#480032'} style={{borderColor: '#FF449F', backgroundColor: '#DFEEEA'}}/>},\t\t\t\t\t\n\t\t\t\t\t'ROICalcGasFee': {id: 'ROICalcGasFee', content: <DefaultColoredBlock title={'ROI vs Gas Fees'} value={`${userConfig && userConfig.localCurrency.toUpperCase()} ${blockData.ROICalcGasFee}`} color={ ROICalcGasFee > 0 ? '#6AA84F' : '#E06666'} style={{borderColor: '#E06666', backgroundColor: '#FFF6F4'}}/>},\n\t\t\t\t\t'SkillEarningsPeso': {id: 'SkillEarningsPeso', content: <DefaultColoredBlock title={'Skill Earnings in ' + localCurrency} value={`${userConfig && userConfig.localCurrency.toUpperCase()} ${blockData.currencyEarningExchange}`} color={'#674EA7'} style={{borderColor: '#674EA7', backgroundColor: '#D9D2E9'}}/>},\n\t\t\t\t\t'SkillPhp': {id: 'SkillPhp', content: <DefaultColoredBlock title={'SKILL in ' + localCurrency} value={`${userConfig && localCurrency} ${blockData.currencyExchangeValue}`} color={'#B45F06'} style={{borderColor: '#B45F06', backgroundColor: '#FFF2CC'}}/>},\n\t\t\t\t\t'BNBBalance': {id: 'BNBBalance', content: <DefaultColoredBlock title={'BNB Balance'} value={blockData.userBNBBalance} color={'#8E7118'} style={{borderColor: '#8E7118', backgroundColor: '#FFF2CC'}}/>},\n\t\t\t\t\t'BNBBalancePHP': {id: 'BNBBalancePHP', content: <DefaultColoredBlock title={'BNB Balance in ' + localCurrency} value={`${userConfig && userConfig.localCurrency.toUpperCase()} ${blockData.userBNBBalanceExchange}`} color={'#6AA84F'} style={{borderColor: '#6AA84F', backgroundColor: '#D9EAD3'}}/>},\n\t\t\t\t\t'GasFeesTxns': {id: 'GasFeesTxns', content: <DefaultColoredBlock title={'Total CB Gas Fees (Last 1k Txns)'} value={`${(userData.currencies[0] && userData.currencies[0].symbol.toUpperCase()) || ''} ${blockData.totalTransactions}`} color={'#A64D79'} style={{borderColor: '#A64D79', backgroundColor: '#EAD1DC'}}/>},\n\t\t\t\t\t'GasFeesTxnsPeso': {id: 'GasFeesTxnsPeso', content: <DefaultColoredBlock title={'Total CB Gas Fees in ' + localCurrency} value={`${userConfig && localCurrency} ${blockData.totalTransactionsInExchange}`} color={'#A64D79'} style={{borderColor: '#A64D79', backgroundColor: '#EAD1DC'}}/>},\n\t\t\t\t\t'ROIGasVSCapitalAndSumTxns': {id: 'ROIGasVSCapitalAndSumTxns', content: <DefaultColoredBlock title={'ROI vs Capital and Total Txns'} value={`${userConfig && userConfig.localCurrency.toUpperCase()} ${blockData.ROIGasVSCapitalAndSumTxns}`} color={ROIGasVSCapitalAndSumTxns > 0 ? '#6AA84F' : '#E06666'} style={{borderColor: '#1155CC', backgroundColor: '#FFF6F4'}}/>},\n\t\t\t\t\t'TotalInitialInvestmentPeso': {id: 'TotalInitialInvestmentPeso', content: <DefaultColoredBlock title={'Total Initial Investment in ' + (userConfig && userConfig.capitalCurrency) } value={`${userConfig && userConfig.capitalCurrency} ${blockData.TotalInitialInvestmentPeso}`} color={'#4285F4'} style={{borderColor: '#4285F4', backgroundColor: '#FFFFFF'}}/>},\n\t\t\t\t\t'ConfigBlock': {id: 'ConfigBlock', content: <ConfigBlock supportedCurrencies={userData && userData.supportedCurrencies}/>},\n\t\t\t\t\t'SkillEarnings': {id: 'SkillEarnings', content: <InputBlock title={'Skill Earnings'} currency={'SKILL'} currencyId={'cryptoblades'} color={'#674EA7'} style={{borderColor: '#674EA7', backgroundColor: '#D9D2E9'}}/>},\n\t\t\t\t\t'CapitalInvestment': {id: 'CapitalInvestment', content: <InputBlock title={'Capital Invested in ' + localCurrency} currency={localCurrency} currencyId={localCurrency} color={'#4285F4'} style={{borderColor: '#38761D', backgroundColor: '#f2f2f2'}}/>}\n\t\t\t\t},\t\t \n\t\t\t}\n\t\t\n\n\t\tuseEffect(()=>{\n\t\t\tconst col = boards.columns['column-1']\n\t\t\tconst listAllBlocks = Object.keys(BLOCK_OBJECT.blocks);\n\t\t\t\n\t\t\tif(boards && boards.columns) {\n\t\t\t\tlet boardBucket = []\n\t\t\t\tObject.keys(boards.columns).map((col) => { boardBucket =  [...boardBucket,...boards.columns[col].blockIds]; return false})\n\t\t\t\tif(boardBucket.length !== listAllBlocks.length) {\n\t\t\t\t\tObject.keys(boards.columns).map((itemcol) => { \n\t\t\t\t\t\trequestSetBlock({\n\t\t\t\t\t\t\t...col,\n\t\t\t\t\t\t\tid:itemcol, \n\t\t\t\t\t\t\tblockIds: []\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn false\n\t\t\t\t\t})\n\t\t\t\t\trequestSetBlock({\n\t\t\t\t\t\t...col, \n\t\t\t\t\t\tblockIds: listAllBlocks\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(boards && boards.columns && !boards.columns['column-1'].blockIds.length ) {\t\t\t\t\n\t\t\t\trequestSetBlock({\n\t\t\t\t\t...col, \n\t\t\t\t\tblockIds: listAllBlocks\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t},[])\n\n\tconst handleDragEnd = result => {\n\t\tconst { destination, source } = result\n\n\t\tif(!destination) {\n\t\t\treturn\n\t\t}\n\n\t\tif(\n\t\t\tdestination.droppableId === source.droppableId && \n\t\t\tdestination.index === source.index\n\t\t){\n\t\t\treturn\n\t\t}\n\n\t\tconst start = boards.columns[source.droppableId]\n\t\tconst finish = boards.columns[destination.droppableId]\n\t\t\n\n\t\tif(start === finish) {\n\t\t\tconst newBlockIds = Array.from(start.blockIds)\n\t\t\tlet plucked = newBlockIds.splice(source.index, 1)[0]; // cut the element at index 'from'\n\t\t\tnewBlockIds.splice(destination.index, 0, plucked); \n\t\t\t\n\t\t\tconst newColumn = {\n\t\t\t\t...start,\n\t\t\t\tblockIds: newBlockIds\n\t\t\t}\n\t\t\trequestSetBlock(newColumn)\n\t\t\treturn\n\t\t}\n\n\t\t//? If dropping to a different column\n\t\tconst startBlockIds = Array.from(start.blockIds)\n\t\tlet pluckedStart = startBlockIds.splice(source.index, 1)[0];\n\t\t \n\t\tconst newStartColumn = {\n\t\t\t...start,\n\t\t\tblockIds: startBlockIds\n\t\t}\n\n\t\tconst finishBlockIds = Array.from(finish.blockIds)\n\t\tfinishBlockIds.splice(destination.index,0, pluckedStart)\n\t\t\n\t\tconst newFinishColumn = {\n\t\t\t...finish,\n\t\t\tblockIds: finishBlockIds\n\t\t}\n\n\t\tconst updatedColumns = {\n\t\t\t[newStartColumn.id] : newStartColumn,\n\t\t\t[newFinishColumn.id] : newFinishColumn\n\t\t}\n\n\t\trequestUpdateColumnBlocks(updatedColumns)\t\t\n\t}\n\n\tconst requestSetBlock = (params) => {\n\t\tupdateBlocks(params)\n\t}\n\t\n\tconst requestUpdateColumnBlocks = (params) => {\n\t\tupdateColumnBlocks(params)\n\t}\n\t\n  return (\n\t\t<DragDropContext onDragEnd={handleDragEnd}>\n\t\t\t<DefaultWrapper>\n\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t{\n\t\t\t\t\tboards && boards.columnOrder && boards.columnOrder.map((columnId) => {\n\t\t\t\t\t\tconst column = boards.columns[columnId]\n\t\t\t\t\t\tconst blocks = column.blockIds.map(blockId => BLOCK_OBJECT.blocks[blockId])\t\t\t\t\t\t\n\t\t\t\t\t\treturn <Grid item xs={12} md={6} lg={4} key={column.id}><DefaultColumn column={column} blocks={blocks}/></Grid>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t\t\n\t\t\t</DefaultWrapper>\n\t\t</DragDropContext>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n\t\tboards: state.boards,\n\t\tuserConfig: state.settings.userConfig,\n\t\tuserCurrencies: state.settings.userCurrencies,\n\t\tuserMatches: state.settings.userMatches\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\t\tupdateBlocks: (params) => dispatch(setBlocks(params)),\n\t\tupdateColumnBlocks: (params) => dispatch(updateColumnBlocks(params))\n\t}\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Portal);\n","import {\n\tSET_BLOCKS,\n\tUPDATE_COLUMN_ORDER,\n\tUPDATE_COLUMN_BLOCKS\n} from \"../constants/boards.constants\";\n\nexport const setBlocks = (params) => {\t\t\n  return {\n    type: SET_BLOCKS,\n    params\n  };\n}\n\nexport const updateColumnOrder = (params) => {\n  return {\n    type: UPDATE_COLUMN_ORDER,\n    params\n  };\n}\n\nexport const updateColumnBlocks = (params) => {\n  return {\n    type: UPDATE_COLUMN_BLOCKS,\n    params\n  };\n}\n","export default __webpack_public_path__ + \"static/media/SteelDemonLogo.346f9bfa.png\";","export default __webpack_public_path__ + \"static/media/cryptoblades.0aadb6d1.png\";","import React from 'react'\n\nimport clsx from 'clsx';\nimport { connect } from \"react-redux\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Drawer, AppBar, List, CssBaseline, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\n\nimport Logo from '../../assets/images/SteelDemonLogo.png';\nimport CryptoBladesLogo from '../../assets/icons/cryptoblades.png';\nimport { MenuOpenRounded } from '@material-ui/icons';\n\nconst drawerWidth = 240; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n\t},\n\tlogo: {\n\t\twidth: theme.spacing(3),\n\t},\n\tsidebarItemIcon: {\n\t\tcolor: theme.palette.secondary.main\n\t},\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\tbackgroundColor: 'transparent', \n\t\tboxShadow: 'none'\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n\t\tmarginRight: theme.spacing(1),\n\t\t'&:hover' : {\n\t\t\tbackgroundColor: 'transparent',\n\t\t} \n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    // [theme.breakpoints.up('sm')]: {\n    //   width: theme.spacing(7) + 1,\n\t\t// },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 2),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n\t},\n\tappName: {\n\t\tmarginLeft: theme.spacing(4)\n\t},\n\tactiveMenu: {\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\tcolor: theme.palette.common.white,\n\t\t'&:hover' :{\t\t\t\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t}\n\t}\n}));\n\nconst ImageIcon = props => {\n\tconst {params} = props;\n\treturn (\n\t\t<img src={params.src} style={{maxWidth: 24}} alt={ params.alt }/>\n\t)\n}\n\nconst MENU_ITEMS = [\n\t{ \n\t\tid: 0,\n\t\ttext: 'CryptoBlades',\n\t\tslug: '/',\n\t\turl: '/',\n\t\ticon: <ImageIcon params={{src: CryptoBladesLogo, alt: 'CB'}}/>,\n\t\tmenuName: 'cryptoblades'\n\t},\n]\n\nconst Sidebar = props => {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst {\n\t\topen,\n\t\thandleToggleDrawer,\n\t\tactiveMenu,\n\t\thandleActiveMenu\n\t} = props\n\n\tconst iconsTransition = {\n\t\topacity: open ? 1 : 0,\n\t\ttransition: \"all 0.3s ease-in\"\n\t}\n\n  return (\n\t\t<div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n\t\t\t\t})}\n      >\n        {/* <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n\t\t\t\t\t\tedge=\"start\"\t\t\t\t\t\t\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <img src={Logo} className={classes.logo}/>\n          </IconButton>          \n        </Toolbar> */}\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\tonClick={()=> handleToggleDrawer(!open)}\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tdisableRipple\t\t\n\t\t\t\t\t\t\tdisableFocusRipple\t\t\t\n\t\t\t\t\t\t\tclassName={clsx(classes.menuButton)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={Logo} className={classes.logo} alt={'Cryptools'}/>\n\t\t\t\t\t\t\t<Typography variant={'h6'} color={'primary'} className={classes.appName} style={iconsTransition}>Cryptools</Typography>\n\t\t\t\t\t\t</IconButton>      \t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<IconButton onClick={()=> handleToggleDrawer(!open)} color={'secondary'}  style={{...iconsTransition, padding: theme.spacing(1), borderColor: theme.palette.secondary, borderWidth: 1, borderStyle: 'solid'}} variant={'outline'}>\n\t\t\t\t\t\t\t{theme.direction === 'rtl' ? <MenuOpenRounded/> : <MenuOpenRounded/>}\n\t\t\t\t\t\t</IconButton>\n        </div>\n        <Divider />\n        <List>\n          {MENU_ITEMS.map((item, index) => (\n            <ListItem button key={item.id}\n\t\t\t\t\t\t\tclassName={clsx({\n\t\t\t\t\t\t\t\t[classes.activeMenu] : activeMenu === item.menuName\n\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\tonClick={()=> handleActiveMenu(item.menuName)}\n\t\t\t\t\t\t\n\t\t\t\t\t\t>\n              <ListItemIcon className={classes.sidebarItemIcon}>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n        \n      </Drawer>\n      \n    </div>\n\n\t)\n}\n\nconst mapStateToProps = state => {\n  return {    \n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n\n","import { Dialog, DialogContentText, DialogTitle, DialogContent, Typography, useTheme, DialogActions, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect } from 'react';\n\nconst UpdateBoard = (props) => {\n  const { settings, requestUpdateStatus } = props\n\tconst theme = useTheme()\n\n  const handleClose = () => {\n\t\tlet params = {\n\t\t\tupdateStatus: {\n\t\t\t\t...settings,\n\t\t\t\tupdateNotice: false\n\t\t\t}\n\t\t}\t\t\n    requestUpdateStatus(params);\t\t\n  };\n\n\tconst appVersion  = 'v1.0-beta.3'\n\tconst updateSettings = {\n\t\tupdateStatus: {\n\t\t\tversion: appVersion,\n\t\t\tupdateNotice: true,\n\t\t\tupdateContent: {\n\t\t\t\ttitle: \"What's new in version \"+ appVersion,\n\t\t\t\tcontent: [\n\t\t\t\t\t\"<strong>Multi-currency option for exchange rates conversion</strong> — Converted values in local currencies are now more flexible to choose other currencies other than PHP (Default on first use).\",\n\t\t\t\t\t\"<strong>Capital Currency updated</strong> — Currency of the Capital Investment input will now use the selected Local Currency. Defaults to PHP on first use.\",\n\t\t\t\t\t\"<strong>Daily Match Tracker</strong> — Added local currency conversion of total gains for the day.\",\t\t\t\t\t\n\t\t\t\t\t\"<strong>Bugfixes and Chores</strong>\"\n\t\t\t\t],\n\t\t\t\twarning: \"This update may break your saved data or reset your board positions to default, please make sure you have a note of all the manual input data you specified on the App such as current earnings of the coin you are farming as well as the capital input and API Key from BSCScan\",\n\t\t\t\tfooter: \"Enjoy! Feel free to send me your suggestions here at <strong>steeldemon026@gmail.com</strong>\"\n\t\t\t} \n\t\t}\n\t}\n\n\tuseEffect(()=>{\t\n\t\tconsole.debug('APP Version:', updateSettings.updateStatus.version)\n\t\tif(settings === undefined || (settings && Object.keys(settings).length === 0) || (settings && settings.version !== updateSettings.updateStatus.version) ) {\t\n\t\t\t\t\t\n\t\t\trequestUpdateStatus(updateSettings)\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n  return (\n    <div>\t\t\t\n      {settings && settings.updateContent && Object.keys(settings.updateContent).length > 0 &&\n\t\t\t\t<Dialog\n\t\t\t\t\topen={(settings && settings.updateNotice) || false }\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\taria-labelledby=\"update-dialog-title\"\n\t\t\t\t\taria-describedby=\"update-dialog-content\"\n\t\t\t\t>\n\t\t\t\t\t<DialogTitle id=\"update-dialog-title\">{settings.updateContent.title}</DialogTitle>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<DialogContentText id=\"update-dialog-content\" component={'div'}>\n\t\t\t\t\t\t\t{settings && settings.updateContent.warning && <Alert severity=\"error\" style={{marginBottom: theme.spacing(2)}}>{settings.updateContent.warning}</Alert>}\n\t\t\t\t\t\t\t<Typography variant={'h6'} color={'primary'}>Changelog</Typography>\n\t\t\t\t\t\t\t{settings && settings.updateContent && settings.updateContent.content &&\n\t\t\t\t\t\t\t\t<ul style={{paddingLeft: theme.spacing(2)}}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsettings.updateContent.content.map((item, idx)=>{\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography key={idx} variant={'body1'} component={'li'} gutterBottom><span dangerouslySetInnerHTML={{__html: item}}></span></Typography>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t{settings && settings.updateContent.footer && <Alert severity=\"info\" style={{marginBottom: theme.spacing(2)}}><span dangerouslySetInnerHTML={{__html: settings.updateContent.footer}}></span></Alert>}\n\t\t\t\t\t</DialogContent>   \n\t\t\t\t\t<DialogActions style={{padding: theme.spacing(2)}}>\n\t\t\t\t\t\t<Button variant={'contained'} color={'primary'} disableFocusRipple onClick={()=> {handleClose()}}>Confirm</Button>\n\t\t\t\t\t</DialogActions>     \n\t\t\t\t</Dialog>\n\t\t\t}\n    </div>\n  );\n}\n\nexport default UpdateBoard\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nimport Sidebar from \"../components/Sidebar/Sidebar\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  toggleDrawer,\n\tsetActiveMenu,\n\tsetUpdateStatus\n} from \"../store/actions\"\nimport UpdateBoard from \"../components/Updates/UpdateBoard\";\n\nconst drawerWidth = 280;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n  },\n  content: {\n    flexGrow: 1,\n    overflowX: \"hidden\",\n    overflowY: \"hidden\",\n    minHeight: 'calc(100vh - 50px)',\n  },\n  contentShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    // transition: theme.transitions.create([\"width\", \"margin\"], {\n    //   easing: theme.transitions.easing.sharp,\n    //   duration: theme.transitions.duration.enteringScreen\n    // })\n  }\n});\n\nfunction MainLayout(props) {\n  const {\n    classes,\n    children,\n    settings,\n    updateDrawerState,\n\t\tupdateActiveMenu,\n\t\trequestUpdateStatus\n  } = props;\n\n  const [open, setOpen] = useState(settings.isDrawerOpen);\n  const [activeMenu, setActiveMenu] = useState(settings.activeMenu);\n  \n\n  useEffect(() => {\n    updateDrawerState(open)\n  },[open, updateDrawerState])\n  \n\tuseEffect(() => {\n    updateActiveMenu(activeMenu)\n  },[activeMenu, updateActiveMenu])\n\n  const handleToggleDrawer = () => {\n    setOpen(!open);\n  };\n  \n\tconst handleActiveMenu = (menu) => {\n    setActiveMenu(menu)\n  };\n\n  return(\n    <Fragment>\n      <div className={classes.root}>       \n        <Sidebar\n          open={settings.isDrawerOpen}\n          handleToggleDrawer={handleToggleDrawer}\n\t\t\t\t\thandleActiveMenu={handleActiveMenu}\n\t\t\t\t\tactiveMenu={activeMenu}\n          {...props.children.props}\n\t\t\t\t/>\n          <main\n            className={classNames(classes.content)}>\n            <div>\n              { children }\n            </div>\n          </main>\n      </div>\n\t\t\t<UpdateBoard settings={settings && settings.updateStatus} requestUpdateStatus={requestUpdateStatus}/>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      updateDrawerState: (params) => dispatch(toggleDrawer(params)),\n\t\t\tupdateActiveMenu: params => dispatch(setActiveMenu(params)),\n\t\t\trequestUpdateStatus: params => dispatch(setUpdateStatus(params))\n    },\n\t\tdispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(MainLayout));","import Portal from \"../containers/Portal\"\nimport MainLayout from '../layout/MainLayout'\n\nlet routes = [\n    {\n        path: '/cryptools-sd',\n        component: Portal,\n        layout: MainLayout,\n        exact: true\n    },\n]\n\nexport default routes;\n","import React from 'react'\n\nimport { Route } from 'react-router-dom'\n\nconst createRoutes = (routes) => {\n  return routes.map((route, key) => {\n    const { component: Component, layout: Layout, ...rest } = route      \n\n    return (\n      <Route key={key} {...rest}\n        render={matchProps => {\n          return (\n            <Layout>\n              <Component {...matchProps} />\n            </Layout>\n          )\n        }}\n      />\n    )\n  })\n}\n\nexport default createRoutes","import React from 'react'\nimport {\n  Switch,\n  Redirect,\n} from 'react-router-dom'\n\nimport CommonRoutes from './CommonRoutes'\nimport createRoutes from './utils'\n\nconst Routes = function(props) {\n  return (\n    <Switch>\n      { createRoutes(CommonRoutes) }      \n      <Redirect to={'/cryptools-sd'} />\n    </Switch>\n  )\n}\n\nexport default Routes","import { createTheme }  from '@material-ui/core/styles'\nconst theme = createTheme({\n  palette: {\n    primary: { \n\t\t\tmain: \"#1E807D\",\t\t\t\t\t\t\n\t\t },\n\t\t secondary: {\n\t\t\t main: \"#FF6DB4\",\t\t\t \t\t\t \n\t\t },\n\t\t common: {\n\t\t\t black: '#2D2D2D', \n\t\t\t white: \"#ffffff\",\n\t\t\t lightblue: '#00C9C6',\n\t\t\t lightbrown: '#F3EADA',\n\t\t\t lightgrey: '#EAF0F3',\n\t\t\t lightred: '#DF5E5E'\n\t\t }\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t'Lato',\n\t\t\t'Arial',\n\t\t\t'sans-serif'\n\t\t],\n\t\thtmlFontSize: 16,\n\t\tsubheading: {\n\t\t\tcolor: \"#ABB0CE\"\n\t\t}\n\t}\n})\nexport default theme","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { connect } from \"react-redux\";\nimport Routes from './routes'\nimport DEFAULT_THEME from './theme'\n\nconst App = props => {\n  return(\n    <MuiThemeProvider theme={DEFAULT_THEME}>\n      <CssBaseline />\n      <div>\n        <Routes />\n      </div>\n    </MuiThemeProvider>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","import {  \n  TOGGLEDRAWER,\n\tSETACTIVEMENU,\n\tSET_CONFIGURATIONS,\n\tSET_USER_CURRENCIES,\n\tSET_USER_MATCHES,\n\tSET_UPDATE_STATUS\n} from \"../constants/settings.constants\";\n\nconst INITIAL_STATE = { \n isDrawerOpen: false,\n activeMenu: 'cryptoblades',\n userConfig: null,\n userCurrencies: {}, \n userMatches: {},\n todayMatches: {},\n};\n\nconst SETTINGS_REDUCER = (state = INITIAL_STATE, action) => {\n\n  switch (action.type) {    \n\n    case TOGGLEDRAWER:\n      return {\n        ...state,\n        isDrawerOpen: action.params\n      };\n    case SETACTIVEMENU:\n      return {\n        ...state,\n        activeMenu: action.params\n      };\n\n\t\tcase SET_CONFIGURATIONS: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserConfig: action.params\n\t\t\t}\n\t\tcase SET_USER_CURRENCIES :\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserCurrencies: {\n\t\t\t\t\t...state.userCurrencies,\n\t\t\t\t\t...action.params\n\t\t\t\t}\n\t\t\t}\n\t\tcase SET_UPDATE_STATUS :\t\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.params\t\t\t\t\n\t\t\t}\n\t\tcase SET_USER_MATCHES :\t\t\t\t\n\t\t\t\tif(action.params.target === 'userMatches') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tuserMatches: {\n\t\t\t\t\t\t\t...state.userMatches,\n\t\t\t\t\t\t\t...action.params.userMatches\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\n\t\t\t\t}else{\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\ttodayMatches: {\n\t\t\t\t\t\t\t...state.todayMatches,\n\t\t\t\t\t\t\t...action.params.todayMatches\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n    default:\n      return state;\n  }\n\n};\n\nexport { SETTINGS_REDUCER };\n","import {  \n  SET_BLOCKS,\n\tUPDATE_COLUMN_ORDER,\n\tUPDATE_COLUMN_BLOCKS\n} from \"../constants/boards.constants\";\n\nconst INITIAL_STATE = {\n\tcolumns: {\n\t\t\"column-1\": {\n\t\t\tid: \"column-1\",\n\t\t\ttitle: \"\",\n\t\t\tblockIds: []\n\t\t},\n\t\t\"column-2\": {\n\t\t\tid: \"column-2\",\n\t\t\ttitle: \"\",\n\t\t\tblockIds: []\n\t\t},\n\t\t\"column-3\": {\n\t\t\tid: \"column-3\",\n\t\t\ttitle: \"\",\n\t\t\tblockIds: []\n\t\t}\n\t},\n\tcolumnOrder: ['column-1', 'column-2', 'column-3']\n};\n\nconst BOARDS_REDUCER = (state = INITIAL_STATE, action) => {\t\t\t\n  switch (action.type) {    \n    case SET_BLOCKS:\t\t\t\n      return {\n        ...state,\n        columns: {\n\t\t\t\t\t...state.columns,\n\t\t\t\t\t[action.params.id]: action.params\n\t\t\t\t}\n      };\n    case UPDATE_COLUMN_ORDER:\n      return {\n        ...state,\n        columnOrder: action.params\n      };\n    case UPDATE_COLUMN_BLOCKS:\n      return {\n        ...state,\n        columns: {\n\t\t\t\t\t...state.columns,\n\t\t\t\t\t...action.params\n\t\t\t\t}\n      };\n\n    default:\n      return state;\n  }\n\n};\n\nexport { BOARDS_REDUCER };\n","import { SETTINGS_REDUCER } from './settings.reducers.js'\nimport { BOARDS_REDUCER } from './boards.reducers.js'\n\nconst reducers = {\n\tsettings: SETTINGS_REDUCER,\n\tboards: BOARDS_REDUCER,\n}\n\nconst whitelist = [ 'settings', 'boards']\nconst blacklist = [ ]\n\nexport { whitelist, blacklist }\n\nexport default reducers","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"\n\nimport reducers, { blacklist, whitelist } from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist,\n  whitelist\n};\n\nconst rootReducer = combineReducers(reducers);\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport reducers from \"./reducers\";\n\nconst middleware = [thunk, logger];\n\nexport const store = createStore(reducers, applyMiddleware(...middleware));\nexport const persistor = persistStore(store);\n\nconst STORE_OBJECT = { store, persistor }\n\nexport default STORE_OBJECT;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Router } from \"react-router-dom\"\nimport { createBrowserHistory } from \"history\"\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nimport App from \"./App\";\nimport { store, persistor } from \"./store/store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n\t\t<PersistGate loading={'null'} persistor={persistor}>\n\t\t\t<Router history={ history }>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}